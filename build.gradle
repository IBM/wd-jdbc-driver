plugins {
	id 'com.github.johnrengelman.shadow' version '7.0.0'
	id 'com.diffplug.spotless' version "6.24.0"
	id 'java'
	id 'antlr'
}

group 'com.ibm.wd'
version '0.0.6-SNAPSHOT'

repositories {
	mavenCentral()
}

dependencies {
	antlr "org.antlr:antlr4:4.9.3"

	implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'
	implementation 'com.ibm.watson:discovery:11.0.1'

	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

test {
	useJUnitPlatform()
}

sourceSets {
	main {
		java.srcDirs = ['src/main/java', buildDir.toString() + '/generated-antlr/antlr/main']
	}
}

generateGrammarSource {
	arguments += ['-package', 'com.ibm.wd.connector.parser']
	outputDirectory = file(buildDir.toString() + '/generated-antlr/antlr/main/com/ibm/wd/connector/parser/')
}

sourceSets {
	main {
		java.srcDir file(buildDir.toString() + '/generated-antlr/antlr/main')
	}
}

// Configure Auto Relocation of package names to avoid unintended version of dependency classes are used on runtime.
// See https://imperceptiblethoughts.com/shadow/configuration/relocation/#filtering-relocation for details.
import com.github.jengelman.gradle.plugins.shadow.tasks.ConfigureShadowRelocation

task relocateShadowJar(type: ConfigureShadowRelocation) {
	target = tasks.shadowJar
	prefix = "wdjdbcdriver"
}

tasks.shadowJar.dependsOn tasks.relocateShadowJar


java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(8)
	}
}


spotless {
	// optional: limit format enforcement to just the files changed by this feature branch
	ratchetFrom 'origin/main'

	format 'misc', {
		// define the files to apply `misc` to
		target '*.gradle', '.gitattributes', '.gitignore'

		// define the steps to apply to those files
		trimTrailingWhitespace()
		indentWithTabs() // or spaces. Takes an integer argument if you don't like 4
		endWithNewline()
	}
	java {
		palantirJavaFormat('2.9.0').style("AOSP")
	}
}
